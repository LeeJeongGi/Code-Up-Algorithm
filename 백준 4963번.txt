#include <iostream>
#include <string>
#include <stack>
#include <vector>
#include <queue>
#include <cstring>

using namespace std;

const int MAX = 50;
int w, h;
int map[MAX][MAX]; //지도
bool visited[MAX][MAX]; //방문

typedef struct {
	int dx, dy;
}dir;

dir direction[8] = { {1, 0}, {1, 1}, {0, 1}, {-1, 1}, {-1, 0}, {-1, -1}, {0, -1}, {1, -1} }; //E SE S SW W NW N NE

void roadIsland(int y, int x) {
	//바다면 갈 필요 없고 이미 방문한 곳이라면 갈필요 없다.
	if (!map[y][x] || visited[y][x]) {
		return;
	}

	visited[y][x] = true;
	for (int i = 0; i < 8; i++) {
		int nextY = y + direction[i].dy;
		int nextX = x + direction[i].dx;

		//범위 안에 있고 방문하지 않은 지점일때만 돌아다닌다.
		if (nextY >= 0 && nextY < h && nextX >= 0 && nextX < w) {
			roadIsland(nextY, nextX);
		}
	}
}

int main(void)
{
	while (1) {
		cin >> w >> h;
		if (w == 0 && h == 0)
			break;

		memset(visited, false, sizeof(visited));
		for (int i = 0; i < h; i++) {
			for (int j = 0; j < w; j++) {
				cin >> map[i][j];
			}
		}

		int islandCnt = 0;
		for(int i=0; i<h; i++)
			for (int j = 0; j < w; j++) {
				if (!visited[i][j] && map[i][j]) {
					roadIsland(i, j);
					islandCnt++;
				}
			}

		cout << islandCnt << endl;
	}

	return 0;

}
