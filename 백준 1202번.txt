#include <iostream>
#include <queue>
#include <algorithm>
using namespace std;

const int MAX = 300001;
int n, k;
pair<int, int> diamond[MAX];
int bagWeight[MAX];
priority_queue<int> pq;

int main()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	cin >> n >> k;
	for (int i = 0; i < n; i++)
		cin >> diamond[i].first >> diamond[i].second;
	for (int i = 0; i < k; i++)
		cin >> bagWeight[i];

	sort(diamond, diamond + n);
	sort(bagWeight, bagWeight + k);

	long long result = 0;
	int idx = 0;
	for (int i = 0; i < k; i++)
	{
		while (idx < n && diamond[idx].first <= bagWeight[i])
			pq.push(diamond[idx++].second);
		
		if (!pq.empty())
		{
			result += pq.top();
			pq.pop();
		}
	}
	cout << result << endl;
	return 0;
}