#include <iostream>
#include <queue>
using namespace std;

int n, m;
queue<pair<int, int>> q;
priority_queue<int> pq;
int cnt;

void print()
{
	cnt = 0;
	while (!q.empty())
	{
		int curIdx = q.front().first;
		int curPri = q.front().second;
		q.pop();

		if (pq.top() == curPri)
		{
			pq.pop();
			cnt++;
			if (curIdx == m)
			{
				cout << cnt << endl;
				break;
			}
		}
		else
			q.push(make_pair(curIdx, curPri));
	}
	return;
}

int main()
{
	int test_case;
	cin >> test_case;
	for (int i = 0; i < test_case; i++)
	{
		cin >> n >> m;
		while (!q.empty())
			q.pop();
		while (!pq.empty())
			pq.pop();
		for (int i = 0; i < n; i++)
		{
			int priority;
			cin >> priority;
			q.push(make_pair(i,priority));
			pq.push(priority);
		}
		print();
	}

	return 0;
}