#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

const int MAX = 1000000001;
int n;
vector<int> v;
vector<int> Operator(4);
int maxResult = -MAX;
int minResult = MAX;

void dfs(int plus, int minus, int mult, int divide, int cnt, int sum)
{
	if (cnt == n)
	{
		maxResult = max(maxResult, sum);
		minResult = min(minResult, sum);
	}
	if (plus > 0)
		dfs(plus - 1, minus, mult, divide, cnt + 1, sum + v[cnt]);
	if (minus > 0)
		dfs(plus , minus-1, mult, divide, cnt + 1, sum - v[cnt]);
	if (mult > 0)
		dfs(plus, minus, mult-1, divide, cnt + 1, sum * v[cnt]);
	if (divide > 0)
		dfs(plus, minus, mult, divide-1, cnt + 1, sum / v[cnt]);
}

int main()
{
	cin >> n;
	v.resize(n);
	for (int i = 0; i < n; i++)
		cin >> v[i];
	for (int i = 0; i < 4; i++)
		cin >> Operator[i];

	dfs(Operator[0], Operator[1], Operator[2], Operator[3], 1, v[0]);
	cout << maxResult << endl;
	cout << minResult << endl;

	return 0;
}